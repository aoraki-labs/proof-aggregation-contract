import hre from "hardhat";
import * as utils from "./utils";


async function main() {

    const Aggregator = await hre.ethers.getContractFactory("Aggregator");
    const aggregator = Aggregator.attach(
        "0xc5a2B2d4A3D44630c0917EE54724bb475c93EbD0"
    );

    const data = ""

    const tx = await aggregator.submit_batch(data);
    console.log(tx);
    
}


main()
    .then(() => process.exit(0))
    .catch(e => {
        console.error(e);
        process.exit(1);
    })